# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# Integrated with Poetry for dependency management

name: Python package

on:
 push:
   branches: [ "main" ]
 pull_request:
   branches: [ "main" ]

jobs:
  build:    
    strategy:
      #fail-fast: false
      matrix:
        os: 
          - ubuntu-24.04
          - ubuntu-22.04
          - ubuntu-20.04
          - windows-2022
          - windows-2019
          - macos-15
          - macos-14
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry (disable virtualenvs in CI)
        run: |
          poetry config virtualenvs.create false

      - name: Install dependencies with Poetry
        run: |
          poetry install
      
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Run tests
        run: |
          poetry run pytest
